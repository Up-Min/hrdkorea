/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-12-23 08:07:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/footer.jsp", Long.valueOf(1671259702000L));
    _jspx_dependants.put("/topmenu.jsp", Long.valueOf(1671632742000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("	\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<!-- add.jsp 에 있는거 복사 -->\n");
      out.write("\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header> 쇼핑몰 회원관리 ver 1.0 </header>\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul>\r\n");
      out.write("			<li><a href=\"add.jsp\">회원등록</a></li>\r\n");
      out.write("			<li><a href=\"list.jsp\">회원목록조회/수정</a></li>\r\n");
      out.write("			<li><a href=\"result.jsp\">회원매출조회</a></li>\r\n");
      out.write("			<li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\n");
      out.write("	<section>\n");
      out.write("		<div class=\"title\">홈쇼핑 회원 정보 수정</div>\n");
      out.write("		<form name=\"frm\" action=\"action.jsp\">\n");
      out.write("			<input type=\"hidden\" name=\"gubun\" value=\"modify\">\n");
      out.write("							<!-- 어차피 action에서 전부 처리할거기 때문에, 구분이 필요함. 그래서 modify! -->\n");
      out.write("			<div class=\"wrapper\">\n");
      out.write("				<table>\n");
      out.write("						<!-- jsp코드가 여기 들어갈거임 -->\n");
      out.write("						");

						try{
						Class.forName("oracle.jdbc.OracleDriver");
						Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "gisa", "gisa1234");
						Statement stmt = con.createStatement(); //DB 커넥션 연결
						
						String custno = request.getParameter("custno"); //url에 있는 키를 받아옴.
						//modify.jsp?custno=100002 -> 100002를 가져옴.
						
						String sql = "SELECT custname, phone, address, TO_CHAR(joindate,'YYYY-MM-DD') joindate, grade, city FROM member_tbl_02 WHERE custno =" +custno;
						ResultSet rs = stmt.executeQuery(sql); //쿼리 실행
						
						if(rs.next()){
						
      out.write("\n");
      out.write("						<tr>\n");
      out.write("						<th>회원번호(자동발생)</th>\n");
      out.write("						<td>									<!-- String custno 넣어줌.  -->\n");
      out.write("						<input type = \"text\" name=\"custno\" value=\"");
      out.print( custno );
      out.write("\" readonly>\n");
      out.write("						</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("						<th>회원성명</th>\n");
      out.write("						<td><input type=\"text\" name=\"custname\" value=\"");
      out.print(rs.getString(1));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>회원전화</th>\n");
      out.write("						<td><input type=\"text\" name=\"phone\" value=\"");
      out.print(rs.getString(2));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>회원주소</th>\n");
      out.write("						<td><input type=\"text\" name=\"address\" value=\"");
      out.print(rs.getString(3));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>가입일자</th>\n");
      out.write("						<td><input type=\"text\" name=\"joindate\" value=\"");
      out.print(rs.getString(4));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>고객등급[A:VIP,B:일반,C:직원]</th>\n");
      out.write("						<td><input type=\"text\" name=\"grade\" value=\"");
      out.print(rs.getString(5));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<th>도시코드</th>\n");
      out.write("						<td><input type=\"text\" name=\"city\" value=\"");
      out.print(rs.getString(6));
      out.write("\"></td>\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td colspan=\"2\">\n");
      out.write("							<button class=\"btn\" type=\"submit\" onclick=\"fn_submit(); return false;\"> 수정 </button>\n");
      out.write("							<button class=\"btn\" type=\"button\" onclick=\"location='list.jsp'\">조회</button>\n");
      out.write("						</td>\n");
      out.write("					</tr>\n");
      out.write("						");
} 
						con.close();
						stmt.close();
						}catch(Exception e){
							e.printStackTrace();
						}
						
						
      out.write("\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("	</section>\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<footer> HRDKOREA Copyright@2016 All rights reserved. Human\r\n");
      out.write("		Resources Development Service of Korea </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
